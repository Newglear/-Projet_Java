Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module org.example {\n    requires javafx.controls;\n    requires javafx.fxml;\n    requires com.google.gson;\n    requires java.desktop;\n    requires java.sql;\n\n    opens org.gui to javafx.fxml;\n    exports org.gui;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision 8f8dde8d6dc37f8be02217252075b9f04f33134e)
+++ b/src/main/java/module-info.java	(date 1671096892983)
@@ -6,5 +6,7 @@
     requires java.sql;
 
     opens org.gui to javafx.fxml;
+    opens org.database to com.google.gson;
+    opens org.network to com.google.gson;
     exports org.gui;
 }
Index: src/main/java/org/network/NetworkSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\n\nimport java.io.IOException;\nimport java.net.*;\n\npublic class NetworkSender{\n    private final DatagramSocket senderSock;\n    Gson gson= new Gson();\n    private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};\n\tprivate String broad = \"10.1.255.255\" ;\n\n    public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {\n            senderSock = new DatagramSocket();\n            senderSock.setBroadcast(true);\n            try{\n                switch (mode){\n                    case Nickname:\n                        Send_Nickname(infos);\n                        break;\n                    case UserInfos:\n                        Send_User_Infos(infos);\n                        break;\n                    case Disconnect:\n                        Disconnect(infos);\n                        break;\n                }\n            }catch (IOException e){\n                System.out.println(\"Message error\");\n            }\n    }\n\n\n    public void Send_User_Infos(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String user = gson.toJson(usr);\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.UserInfos, user));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Send_Nickname(User usr) throws IOException {\n\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Nickname, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Disconnect(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Disconnect, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/network/NetworkSender.java b/src/main/java/org/network/NetworkSender.java
--- a/src/main/java/org/network/NetworkSender.java	(revision 8f8dde8d6dc37f8be02217252075b9f04f33134e)
+++ b/src/main/java/org/network/NetworkSender.java	(date 1671097175531)
@@ -10,7 +10,7 @@
     private final DatagramSocket senderSock;
     Gson gson= new Gson();
     private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};
-	private String broad = "10.1.255.255" ;
+	private String broad = "localhost" ;
 
     public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {
             senderSock = new DatagramSocket();
Index: src/main/java/org/network/NetworkReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\nimport org.database.DatabaseManager;\n\nimport java.io.IOException;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.SocketException;\nimport java.sql.SQLException;\n\npublic class NetworkReceiver extends Thread {\n    Gson gson = new Gson();\n    private DatagramSocket recvSock;\n\n    public NetworkReceiver(String id){\n        super(id);\n        System.out.println(\"====== RECEIVING THREAD INITIATED ======\");\n        start();\n    }\n\n    @Override\n    public void run() {\n        Receive();\n\n    }\n    private void Receive(){\n        try {\n            recvSock = new DatagramSocket(1234);\n        } catch (SocketException e) {\n            throw new RuntimeException(e);\n        }\n        byte[] buffer = new byte[256];\n        DatagramPacket inPacket = new DatagramPacket(buffer, buffer.length);\n        while(true){\n            try {\n                System.out.println(\"Attente de réception\");\n                recvSock.receive(inPacket);\n                String var = new String(inPacket.getData(), 0, inPacket.getLength());\n                NetworkMessage msg = gson.fromJson(var, NetworkMessage.class);\n                switch (msg.getMode()){\n                    case UserInfos:\n                        Receive_Infos(msg.getObject());\n                        break;\n                    case Nickname:\n                        Receive_Nickname(msg.getObject());\n                        break;\n                    case Disconnect:\n                        Receive_Disconnect(msg.getObject());\n                        break;\n                }\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n\n    public void Receive_Infos(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Nouvel Utilisateur \"+usr);\n        try{\n            DatabaseManager.Insert(usr);\n        } catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Nickname(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Changement de pseudo entrant \" + usr.getPseudo() );\n        try {\n            DatabaseManager.Update(usr);\n        } catch ( SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Disconnect(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Déconnexion de \" + obj);\n\n        try{\n            DatabaseManager.Remove(usr);\n        }catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/network/NetworkReceiver.java b/src/main/java/org/network/NetworkReceiver.java
--- a/src/main/java/org/network/NetworkReceiver.java	(revision 8f8dde8d6dc37f8be02217252075b9f04f33134e)
+++ b/src/main/java/org/network/NetworkReceiver.java	(date 1671097237747)
@@ -77,7 +77,7 @@
     }
     public void Receive_Disconnect(String obj){
         User usr = gson.fromJson(obj, User.class);
-        System.out.println("Déconnexion de " + obj);
+        System.out.println("Déconnexion \n " + usr);
 
         try{
             DatabaseManager.Remove(usr);
Index: src/main/java/org/MainSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\nimport org.network.NetworkReceiver;\nimport org.network.NetworkSender;\nimport org.network.Types;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\n\npublic class MainSender {\n\n    public static void main(String[] args) throws SocketException, UnknownHostException {\n        DatabaseManager db = new DatabaseManager();\n        User usr = new User(\"Cador\",1234, \"localhost\");\n        NetworkReceiver net = new NetworkReceiver(\"R1\");\n        NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);\n        usr= new User(\"Wesh\",1234,\"localhost\");\n        NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);\n        //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/MainSender.java b/src/main/java/org/MainSender.java
--- a/src/main/java/org/MainSender.java	(revision 8f8dde8d6dc37f8be02217252075b9f04f33134e)
+++ b/src/main/java/org/MainSender.java	(date 1671096931283)
@@ -18,7 +18,7 @@
         NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);
         usr= new User("Wesh",1234,"localhost");
         NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);
-        //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);
+        NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);
 
     }
 }
Index: src/main/java/org/test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org;\n\nimport org.conv.ConnectionManager;\nimport org.database.DatabaseManager;\n\nimport java.net.*;\n\npublic class test {\n\n    public static void main(String[] args) throws UnknownHostException, InterruptedException {\n        DatabaseManager db = new DatabaseManager();\n        String addr =\"10.1.5.225\";\n\n\n        //System.out.println(a.getHostAddress());\n\n        ConnectionManager c = new ConnectionManager();\n        c.start();\n        //ThreadManager.createSenderThread(InetAddress.getByName(addr),1234,\"petit suicide entre amis\");\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/test.java b/src/main/java/org/test.java
--- a/src/main/java/org/test.java	(revision 8f8dde8d6dc37f8be02217252075b9f04f33134e)
+++ b/src/main/java/org/test.java	(date 1671097291919)
@@ -9,14 +9,14 @@
 
     public static void main(String[] args) throws UnknownHostException, InterruptedException {
         DatabaseManager db = new DatabaseManager();
-        String addr ="10.1.5.225";
+        String addr ="localhost";
 
 
         //System.out.println(a.getHostAddress());
 
         ConnectionManager c = new ConnectionManager();
         c.start();
-        //ThreadManager.createSenderThread(InetAddress.getByName(addr),1234,"petit suicide entre amis");
+        ThreadManager.createSenderThread(InetAddress.getByName(addr),1234,"petit suicide entre amis");
     }
 
 }
Index: ../../ChatBot/TODO
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../ChatBot/TODO b/../../ChatBot/TODO
new file mode 100644
--- /dev/null	(date 1671093222743)
+++ b/../../ChatBot/TODO	(date 1671093222743)
@@ -0,0 +1,9 @@
+Gwen: 
+
+  Database Manager :
+      Initialisation de la DB si pas instanciée 
+      méthode de Flush des tables 
+
+  Network Manager: 
+    Gestion de check unicity en mode Nickname 
+
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1671094691315)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/shelved.patch	(date 1671094691315)
@@ -0,0 +1,134 @@
+Index: ChatBotFX/src/main/java/org/network/NetworkSender.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\n\nimport java.io.IOException;\nimport java.net.*;\n\npublic class NetworkSender{\n    private final DatagramSocket senderSock;\n    Gson gson= new Gson();\n    private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};\n\tprivate String broad = \"10.1.255.255\" ;\n\n    public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {\n            senderSock = new DatagramSocket();\n            senderSock.setBroadcast(true);\n            try{\n                switch (mode){\n                    case Nickname:\n                        Send_Nickname(infos);\n                        break;\n                    case UserInfos:\n                        Send_User_Infos(infos);\n                        break;\n                    case Disconnect:\n                        Disconnect(infos);\n                        break;\n                }\n            }catch (IOException e){\n                System.out.println(\"Message error\");\n            }\n    }\n\n\n    public void Send_User_Infos(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String user = gson.toJson(usr);\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.UserInfos, user));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Send_Nickname(User usr) throws IOException {\n\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Nickname, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Disconnect(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Disconnect, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/network/NetworkSender.java b/ChatBotFX/src/main/java/org/network/NetworkSender.java
+--- a/ChatBotFX/src/main/java/org/network/NetworkSender.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/network/NetworkSender.java	(date 1671094668783)
+@@ -1,7 +1,7 @@
+ package org.network;
+ 
+ import com.google.gson.Gson;
+-import org.database.User;
++import org.User;
+ 
+ import java.io.IOException;
+ import java.net.*;
+@@ -10,7 +10,7 @@
+     private final DatagramSocket senderSock;
+     Gson gson= new Gson();
+     private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};
+-	private String broad = "10.1.255.255" ;
++	private String broad = "localhost" ;
+ 
+     public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {
+             senderSock = new DatagramSocket();
+Index: ChatBotFX/src/main/java/org/MainSender.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\nimport org.network.NetworkReceiver;\nimport org.network.NetworkSender;\nimport org.network.Types;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\n\npublic class MainSender {\n\n    public static void main(String[] args) throws SocketException, UnknownHostException {\n        DatabaseManager db = new DatabaseManager();\n        User usr = new User(\"Cador\",1234, \"localhost\");\n        NetworkReceiver net = new NetworkReceiver(\"R1\");\n        NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);\n        usr= new User(\"Wesh\",1234,\"localhost\");\n        NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);\n        //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);\n\n    }\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/MainSender.java b/ChatBotFX/src/main/java/org/MainSender.java
+--- a/ChatBotFX/src/main/java/org/MainSender.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/MainSender.java	(date 1671094668819)
+@@ -1,7 +1,6 @@
+ package org;
+ 
+ import org.database.DatabaseManager;
+-import org.database.User;
+ import org.network.NetworkReceiver;
+ import org.network.NetworkSender;
+ import org.network.Types;
+@@ -11,14 +10,14 @@
+ 
+ public class MainSender {
+ 
+-    public static void main(String[] args) throws SocketException, UnknownHostException {
++    public static void main(String[] args) throws SocketException{
+         DatabaseManager db = new DatabaseManager();
+         User usr = new User("Cador",1234, "localhost");
++        //System.out.println(new Gson().toJson(usr));
+         NetworkReceiver net = new NetworkReceiver("R1");
+         NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);
+         usr= new User("Wesh",1234,"localhost");
+         NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);
+         //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);
+-
+     }
+ }
+Index: ChatBotFX/src/main/java/org/database/User.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/database/User.java b/ChatBotFX/src/main/java/org/User.java
+rename from ChatBotFX/src/main/java/org/database/User.java
+rename to ChatBotFX/src/main/java/org/User.java
+--- a/ChatBotFX/src/main/java/org/database/User.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/User.java	(date 1671094668795)
+@@ -1,4 +1,4 @@
+-package org.database;
++package org;
+ 
+ import java.util.Arrays;
+ 
+Index: ChatBotFX/src/main/java/org/Main.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\nimport java.sql.SQLException;\n\npublic class Main {\n\n    public static void main(String[] args) throws UnknownHostException, SocketException, SQLException {\n        DatabaseManager db = new DatabaseManager();\n        db.Update(new User(\"pls\", 1234,\"193.465\"));\n        db.Disconnect();\n    }\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/Main.java b/ChatBotFX/src/main/java/org/Main.java
+--- a/ChatBotFX/src/main/java/org/Main.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/Main.java	(date 1671094668827)
+@@ -1,7 +1,6 @@
+ package org;
+ 
+ import org.database.DatabaseManager;
+-import org.database.User;
+ 
+ import java.net.SocketException;
+ import java.net.UnknownHostException;
+Index: ChatBotFX/src/main/java/org/network/NetworkReceiver.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\nimport org.database.DatabaseManager;\n\nimport java.io.IOException;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.SocketException;\nimport java.sql.SQLException;\n\npublic class NetworkReceiver extends Thread {\n    Gson gson = new Gson();\n    private DatagramSocket recvSock;\n\n    public NetworkReceiver(String id){\n        super(id);\n        System.out.println(\"====== RECEIVING THREAD INITIATED ======\");\n        start();\n    }\n\n    @Override\n    public void run() {\n        Receive();\n\n    }\n    private void Receive(){\n        try {\n            recvSock = new DatagramSocket(1234);\n        } catch (SocketException e) {\n            throw new RuntimeException(e);\n        }\n        byte[] buffer = new byte[256];\n        DatagramPacket inPacket = new DatagramPacket(buffer, buffer.length);\n        while(true){\n            try {\n                System.out.println(\"Attente de réception\");\n                recvSock.receive(inPacket);\n                String var = new String(inPacket.getData(), 0, inPacket.getLength());\n                NetworkMessage msg = gson.fromJson(var, NetworkMessage.class);\n                switch (msg.getMode()){\n                    case UserInfos:\n                        Receive_Infos(msg.getObject());\n                        break;\n                    case Nickname:\n                        Receive_Nickname(msg.getObject());\n                        break;\n                    case Disconnect:\n                        Receive_Disconnect(msg.getObject());\n                        break;\n                }\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n\n    public void Receive_Infos(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Nouvel Utilisateur \"+usr);\n        try{\n            DatabaseManager.Insert(usr);\n        } catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Nickname(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Changement de pseudo entrant \" + usr.getPseudo() );\n        try {\n            DatabaseManager.Update(usr);\n        } catch ( SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Disconnect(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Déconnexion de \" + obj);\n\n        try{\n            DatabaseManager.Remove(usr);\n        }catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/network/NetworkReceiver.java b/ChatBotFX/src/main/java/org/network/NetworkReceiver.java
+--- a/ChatBotFX/src/main/java/org/network/NetworkReceiver.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/network/NetworkReceiver.java	(date 1671094668835)
+@@ -1,7 +1,7 @@
+ package org.network;
+ 
+ import com.google.gson.Gson;
+-import org.database.User;
++import org.User;
+ import org.database.DatabaseManager;
+ 
+ import java.io.IOException;
+Index: ChatBotFX/src/main/java/org/database/DatabaseManager.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.database;\n\nimport java.sql.*;\nimport java.util.ArrayList;\n\n\npublic class DatabaseManager {\n    private static Connection con;\n    public DatabaseManager(){\n\n        try {\n            con = DriverManager.getConnection(\"jdbc:sqlite:ChaDBsqlite\");\n        }catch (SQLException s) {\n            System.out.println(s);\n        }\n       /* String query = \"SELECT * FROM main.History where ?\";\n        PreparedStatement pstmt = con.prepareStatement(query);\n        pstmt.setString(1,\"History\");\n        ResultSet rs = pstmt.executeQuery();\n\n        System.out.println(rs.getString(\"user\"));\n*/\n        System.out.println(\"Database Initialised\");\n\n\n    }\n\n    public static ArrayList<String> LoadUsers() throws SQLException {\n        ArrayList<String> l = new ArrayList<>();\n        String query = \"Select * from Users\";\n        PreparedStatement p = con.prepareStatement(query);\n        ResultSet rs = p.executeQuery();\n        while (rs.next()){\n            l.add(rs.getString(\"Nickname\"));\n        }\n        return l;\n    }\n\n\n    public static void Remove(User user) throws SQLException {\n        String query = \"DELETE FROM Users where Nickname = ?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.execute();\n    }\n    public static void Update(User user) throws SQLException {\n        String query = \"UPDATE Users SET Nickname = ? WHERE Ip = ?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.setString(2,user.getAddr());\n        p.execute();\n    }\n    public static void Insert(User user) throws SQLException {\n        String query = \"INSERT INTO Users(Nickname, Ip, Port) values (?,?,?)\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.setString(2, user.getAddr());\n        p.setInt(3,user.getPort());\n        p.execute();\n    }\n    public static void Insert(Message msg) throws SQLException {\n        String query = \"INSERT INTO History(Sender, Receiver, Content,Date) values (?,?,?,?)\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1, msg.getSender());\n        p.setString(2, msg.getReceiver());\n        p.setString(3,msg.getMsg());\n        p.setDate(4, new Date(System.currentTimeMillis()));\n        p.execute();\n    }\n\n    public static ArrayList<Message> LoadHistory(User u) throws SQLException {\n        ArrayList<Message> l = new ArrayList<>();\n        String query = \"Select * from History where Sender = ? and Receiver = ? or Sender = ? or Receiver = ? \";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,u.getPseudo());\n        p.setString(2,\"Gwen\");\n        p.setString(3,\"Gwen\");\n        p.setString(4,u.getPseudo());\n        ResultSet rs = p.executeQuery();\n        while (rs.next()){\n            Message m = new Message(rs.getString(\"Sender\"),rs.getString(\"Receiver\"),rs.getString(\"Content\"),rs.getDate(\"Date\"));\n            l.add(m);\n\n            System.out.println(m);\n            System.out.println(\"--------------------\");\n        }\n        return l;\n    }\n    public static User LoadUser(String name) throws SQLException {\n        String query = \"Select * from Users where Nickname=?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,name);\n        ResultSet rs = p.executeQuery();\n        //System.out.println(new User(rs.getString(\"Nickname\"), rs.getInt(\"Port\"), rs.getString(\"Ip\")));\n        return new User(rs.getString(\"Nickname\"), rs.getInt(\"Port\"), rs.getString(\"Ip\"));\n    }\n    public static void Disconnect(){\n        try {\n            con.close();\n        } catch (SQLException s ){\n            System.out.println(s);\n        }\n        System.out.println(\"Database Disconnected successfully\");\n    }\n\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/database/DatabaseManager.java b/ChatBotFX/src/main/java/org/database/DatabaseManager.java
+--- a/ChatBotFX/src/main/java/org/database/DatabaseManager.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/database/DatabaseManager.java	(date 1671094668843)
+@@ -1,5 +1,7 @@
+ package org.database;
+ 
++import org.User;
++
+ import java.sql.*;
+ import java.util.ArrayList;
+ 
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1671094668483)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/shelved.patch	(date 1671094668483)
@@ -0,0 +1,134 @@
+Index: ChatBotFX/src/main/java/org/network/NetworkSender.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\n\nimport java.io.IOException;\nimport java.net.*;\n\npublic class NetworkSender{\n    private final DatagramSocket senderSock;\n    Gson gson= new Gson();\n    private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};\n\tprivate String broad = \"10.1.255.255\" ;\n\n    public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {\n            senderSock = new DatagramSocket();\n            senderSock.setBroadcast(true);\n            try{\n                switch (mode){\n                    case Nickname:\n                        Send_Nickname(infos);\n                        break;\n                    case UserInfos:\n                        Send_User_Infos(infos);\n                        break;\n                    case Disconnect:\n                        Disconnect(infos);\n                        break;\n                }\n            }catch (IOException e){\n                System.out.println(\"Message error\");\n            }\n    }\n\n\n    public void Send_User_Infos(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String user = gson.toJson(usr);\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.UserInfos, user));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Send_Nickname(User usr) throws IOException {\n\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Nickname, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Disconnect(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Disconnect, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/network/NetworkSender.java b/ChatBotFX/src/main/java/org/network/NetworkSender.java
+--- a/ChatBotFX/src/main/java/org/network/NetworkSender.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/network/NetworkSender.java	(date 1671094308923)
+@@ -1,7 +1,7 @@
+ package org.network;
+ 
+ import com.google.gson.Gson;
+-import org.database.User;
++import org.User;
+ 
+ import java.io.IOException;
+ import java.net.*;
+@@ -10,7 +10,7 @@
+     private final DatagramSocket senderSock;
+     Gson gson= new Gson();
+     private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};
+-	private String broad = "10.1.255.255" ;
++	private String broad = "localhost" ;
+ 
+     public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {
+             senderSock = new DatagramSocket();
+Index: ChatBotFX/src/main/java/org/database/User.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/database/User.java b/ChatBotFX/src/main/java/org/User.java
+rename from ChatBotFX/src/main/java/org/database/User.java
+rename to ChatBotFX/src/main/java/org/User.java
+--- a/ChatBotFX/src/main/java/org/database/User.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/User.java	(date 1671094308951)
+@@ -1,4 +1,4 @@
+-package org.database;
++package org;
+ 
+ import java.util.Arrays;
+ 
+Index: ChatBotFX/src/main/java/org/MainSender.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\nimport org.network.NetworkReceiver;\nimport org.network.NetworkSender;\nimport org.network.Types;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\n\npublic class MainSender {\n\n    public static void main(String[] args) throws SocketException, UnknownHostException {\n        DatabaseManager db = new DatabaseManager();\n        User usr = new User(\"Cador\",1234, \"localhost\");\n        NetworkReceiver net = new NetworkReceiver(\"R1\");\n        NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);\n        usr= new User(\"Wesh\",1234,\"localhost\");\n        NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);\n        //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);\n\n    }\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/MainSender.java b/ChatBotFX/src/main/java/org/MainSender.java
+--- a/ChatBotFX/src/main/java/org/MainSender.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/MainSender.java	(date 1671094646395)
+@@ -1,7 +1,6 @@
+ package org;
+ 
+ import org.database.DatabaseManager;
+-import org.database.User;
+ import org.network.NetworkReceiver;
+ import org.network.NetworkSender;
+ import org.network.Types;
+@@ -11,14 +10,14 @@
+ 
+ public class MainSender {
+ 
+-    public static void main(String[] args) throws SocketException, UnknownHostException {
++    public static void main(String[] args) throws SocketException{
+         DatabaseManager db = new DatabaseManager();
+         User usr = new User("Cador",1234, "localhost");
++        //System.out.println(new Gson().toJson(usr));
+         NetworkReceiver net = new NetworkReceiver("R1");
+         NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);
+         usr= new User("Wesh",1234,"localhost");
+         NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);
+         //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);
+-
+     }
+ }
+Index: ChatBotFX/src/main/java/org/Main.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\nimport java.sql.SQLException;\n\npublic class Main {\n\n    public static void main(String[] args) throws UnknownHostException, SocketException, SQLException {\n        DatabaseManager db = new DatabaseManager();\n        db.Update(new User(\"pls\", 1234,\"193.465\"));\n        db.Disconnect();\n    }\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/Main.java b/ChatBotFX/src/main/java/org/Main.java
+--- a/ChatBotFX/src/main/java/org/Main.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/Main.java	(date 1671094308943)
+@@ -1,7 +1,6 @@
+ package org;
+ 
+ import org.database.DatabaseManager;
+-import org.database.User;
+ 
+ import java.net.SocketException;
+ import java.net.UnknownHostException;
+Index: ChatBotFX/src/main/java/org/network/NetworkReceiver.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\nimport org.database.DatabaseManager;\n\nimport java.io.IOException;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.SocketException;\nimport java.sql.SQLException;\n\npublic class NetworkReceiver extends Thread {\n    Gson gson = new Gson();\n    private DatagramSocket recvSock;\n\n    public NetworkReceiver(String id){\n        super(id);\n        System.out.println(\"====== RECEIVING THREAD INITIATED ======\");\n        start();\n    }\n\n    @Override\n    public void run() {\n        Receive();\n\n    }\n    private void Receive(){\n        try {\n            recvSock = new DatagramSocket(1234);\n        } catch (SocketException e) {\n            throw new RuntimeException(e);\n        }\n        byte[] buffer = new byte[256];\n        DatagramPacket inPacket = new DatagramPacket(buffer, buffer.length);\n        while(true){\n            try {\n                System.out.println(\"Attente de réception\");\n                recvSock.receive(inPacket);\n                String var = new String(inPacket.getData(), 0, inPacket.getLength());\n                NetworkMessage msg = gson.fromJson(var, NetworkMessage.class);\n                switch (msg.getMode()){\n                    case UserInfos:\n                        Receive_Infos(msg.getObject());\n                        break;\n                    case Nickname:\n                        Receive_Nickname(msg.getObject());\n                        break;\n                    case Disconnect:\n                        Receive_Disconnect(msg.getObject());\n                        break;\n                }\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n\n    public void Receive_Infos(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Nouvel Utilisateur \"+usr);\n        try{\n            DatabaseManager.Insert(usr);\n        } catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Nickname(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Changement de pseudo entrant \" + usr.getPseudo() );\n        try {\n            DatabaseManager.Update(usr);\n        } catch ( SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Disconnect(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Déconnexion de \" + obj);\n\n        try{\n            DatabaseManager.Remove(usr);\n        }catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/network/NetworkReceiver.java b/ChatBotFX/src/main/java/org/network/NetworkReceiver.java
+--- a/ChatBotFX/src/main/java/org/network/NetworkReceiver.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/network/NetworkReceiver.java	(date 1671094308967)
+@@ -1,7 +1,7 @@
+ package org.network;
+ 
+ import com.google.gson.Gson;
+-import org.database.User;
++import org.User;
+ import org.database.DatabaseManager;
+ 
+ import java.io.IOException;
+Index: ChatBotFX/src/main/java/org/database/DatabaseManager.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.database;\n\nimport java.sql.*;\nimport java.util.ArrayList;\n\n\npublic class DatabaseManager {\n    private static Connection con;\n    public DatabaseManager(){\n\n        try {\n            con = DriverManager.getConnection(\"jdbc:sqlite:ChaDBsqlite\");\n        }catch (SQLException s) {\n            System.out.println(s);\n        }\n       /* String query = \"SELECT * FROM main.History where ?\";\n        PreparedStatement pstmt = con.prepareStatement(query);\n        pstmt.setString(1,\"History\");\n        ResultSet rs = pstmt.executeQuery();\n\n        System.out.println(rs.getString(\"user\"));\n*/\n        System.out.println(\"Database Initialised\");\n\n\n    }\n\n    public static ArrayList<String> LoadUsers() throws SQLException {\n        ArrayList<String> l = new ArrayList<>();\n        String query = \"Select * from Users\";\n        PreparedStatement p = con.prepareStatement(query);\n        ResultSet rs = p.executeQuery();\n        while (rs.next()){\n            l.add(rs.getString(\"Nickname\"));\n        }\n        return l;\n    }\n\n\n    public static void Remove(User user) throws SQLException {\n        String query = \"DELETE FROM Users where Nickname = ?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.execute();\n    }\n    public static void Update(User user) throws SQLException {\n        String query = \"UPDATE Users SET Nickname = ? WHERE Ip = ?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.setString(2,user.getAddr());\n        p.execute();\n    }\n    public static void Insert(User user) throws SQLException {\n        String query = \"INSERT INTO Users(Nickname, Ip, Port) values (?,?,?)\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.setString(2, user.getAddr());\n        p.setInt(3,user.getPort());\n        p.execute();\n    }\n    public static void Insert(Message msg) throws SQLException {\n        String query = \"INSERT INTO History(Sender, Receiver, Content,Date) values (?,?,?,?)\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1, msg.getSender());\n        p.setString(2, msg.getReceiver());\n        p.setString(3,msg.getMsg());\n        p.setDate(4, new Date(System.currentTimeMillis()));\n        p.execute();\n    }\n\n    public static ArrayList<Message> LoadHistory(User u) throws SQLException {\n        ArrayList<Message> l = new ArrayList<>();\n        String query = \"Select * from History where Sender = ? and Receiver = ? or Sender = ? or Receiver = ? \";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,u.getPseudo());\n        p.setString(2,\"Gwen\");\n        p.setString(3,\"Gwen\");\n        p.setString(4,u.getPseudo());\n        ResultSet rs = p.executeQuery();\n        while (rs.next()){\n            Message m = new Message(rs.getString(\"Sender\"),rs.getString(\"Receiver\"),rs.getString(\"Content\"),rs.getDate(\"Date\"));\n            l.add(m);\n\n            System.out.println(m);\n            System.out.println(\"--------------------\");\n        }\n        return l;\n    }\n    public static User LoadUser(String name) throws SQLException {\n        String query = \"Select * from Users where Nickname=?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,name);\n        ResultSet rs = p.executeQuery();\n        //System.out.println(new User(rs.getString(\"Nickname\"), rs.getInt(\"Port\"), rs.getString(\"Ip\")));\n        return new User(rs.getString(\"Nickname\"), rs.getInt(\"Port\"), rs.getString(\"Ip\"));\n    }\n    public static void Disconnect(){\n        try {\n            con.close();\n        } catch (SQLException s ){\n            System.out.println(s);\n        }\n        System.out.println(\"Database Disconnected successfully\");\n    }\n\n}\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/ChatBotFX/src/main/java/org/database/DatabaseManager.java b/ChatBotFX/src/main/java/org/database/DatabaseManager.java
+--- a/ChatBotFX/src/main/java/org/database/DatabaseManager.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
++++ b/ChatBotFX/src/main/java/org/database/DatabaseManager.java	(date 1671094308975)
+@@ -1,5 +1,7 @@
+ package org.database;
+ 
++import org.User;
++
+ import java.sql.*;
+ import java.util.ArrayList;
+ 
Index: ../.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/workspace.xml b/../.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1671096289999)
+++ b/../.idea/workspace.xml	(date 1671096289999)
@@ -0,0 +1,129 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="07ff7987-a1ae-440c-9498-8f92821b9a07" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="generalSettings">
+      <MavenGeneralSettings>
+        <option name="useMavenConfig" value="true" />
+      </MavenGeneralSettings>
+    </option>
+  </component>
+  <component name="ProjectId" id="2IwXAs40Ih0TlkOSIti1NaSR5T9" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "last_opened_file_path": "/home/newgz/Insa/Projet_Java/ChatBot",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
+      <recent name="" />
+      <recent name="org" />
+    </key>
+  </component>
+  <component name="RunAnythingCache">
+    <option name="myCommands">
+      <command value="mvn compile" />
+    </option>
+  </component>
+  <component name="RunManager" selected="Application.MainSender">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="org.Main" />
+      <module name="ChatBotFX" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="MainReceive" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="org.MainReceive" />
+      <module name="ChatBotFX" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="MainSender" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="11" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
+      <option name="MAIN_CLASS_NAME" value="org.MainSender" />
+      <module name="ChatBotFX" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <list>
+      <item itemvalue="Application.Main" />
+      <item itemvalue="Application.MainReceive" />
+      <item itemvalue="Application.MainSender" />
+    </list>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.MainSender" />
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Application.MainReceive" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="07ff7987-a1ae-440c-9498-8f92821b9a07" name="Changes" comment="" />
+      <created>1671093479147</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1671093479147</updated>
+      <workItem from="1671093480415" duration="1112000" />
+      <workItem from="1671094624916" duration="1664000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58__Changes_.xml
new file mode 100644
--- /dev/null	(date 1671094830827)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58__Changes_.xml	(date 1671094830827)
@@ -0,0 +1,39 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]" date="1671094691619" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 15/12/2022 09:58 [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/database/User.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/network/NetworkReceiver.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/network/NetworkReceiver.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/NetworkReceiver.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/Main.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/Main.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/Main.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/network/NetworkSender.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/network/NetworkSender.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/NetworkSender.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/module-info.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/module-info.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/module-info.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/MainSender.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/MainSender.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/MainSender.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/database/DatabaseManager.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/database/DatabaseManager.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_58_[Changes]/DatabaseManager.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57__Changes_.xml
new file mode 100644
--- /dev/null	(date 1671094675083)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57__Changes_.xml	(date 1671094675083)
@@ -0,0 +1,39 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]" date="1671094668917" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 15/12/2022 09:57 [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/database/User.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/network/NetworkReceiver.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/network/NetworkReceiver.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/NetworkReceiver.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/Main.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/Main.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/Main.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/network/NetworkSender.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/network/NetworkSender.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/NetworkSender.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/module-info.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/module-info.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/module-info.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/MainSender.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/MainSender.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/MainSender.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="ChatBotFX/target/classes/org/database/DatabaseManager.class" />
+    <option name="AFTER_PATH" value="ChatBotFX/target/classes/org/database/DatabaseManager.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_09_57_[Changes]/DatabaseManager.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../../ChatBot/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"3a1ec4ca-d9b5-44e2-aea3-9c7ce6021c59\" name=\"Default Changelist\" comment=\"Test commit sur intelliJ\">\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/MainSender.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/MainSender.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/database/DatabaseManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/database/DatabaseManager.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/database/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/User.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/network/NetworkReceiver.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/network/NetworkReceiver.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/network/NetworkSender.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/src/main/java/org/network/NetworkSender.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/module-info.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/module-info.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/Main.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/MainSender.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/MainSender.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/database/DatabaseManager.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/database/DatabaseManager.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/database/User.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/network/NetworkReceiver.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/network/NetworkReceiver.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/network/NetworkSender.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChatBotFX/ChatBotFX/target/classes/org/network/NetworkSender.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeStyleSettingsInfer\">\n    <option name=\"done\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectCodeStyleSettingsMigration\">\n    <option name=\"version\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2HciqVrQmFMV41wJT8t866KHNdg\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"last_opened_file_path\": \"/home/newgz/Insa/Projet_Java/ChatBotFX\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"Application.test\">\n    <configuration name=\"GwenCador\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"GwenCador\" />\n      <module name=\"ChatBot\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"ChatBot\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"MainSender\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainSender\" />\n      <module name=\"ChatBot\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"test\" />\n      <module name=\"ChatBot\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.test\" />\n        <item itemvalue=\"Application.MainSender\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.GwenCador\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"3a1ec4ca-d9b5-44e2-aea3-9c7ce6021c59\" name=\"Default Changelist\" comment=\"\" />\n      <created>1668590964575</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1668590964575</updated>\n      <workItem from=\"1670942081903\" duration=\"3253000\" />\n      <workItem from=\"1671093259817\" duration=\"1330000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Test commit sur intelliJ\">\n      <created>1668591202573</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668591202573</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Connection Manager working with several Sender\">\n      <created>1669649925835</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669649925835</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Connection Manager working with several Sender\" />\n    <MESSAGE value=\"Test commit sur intelliJ\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Test commit sur intelliJ\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../ChatBot/.idea/workspace.xml b/../../ChatBot/.idea/workspace.xml
--- a/../../ChatBot/.idea/workspace.xml	(revision 8f8dde8d6dc37f8be02217252075b9f04f33134e)
+++ b/../../ChatBot/.idea/workspace.xml	(date 1671096530523)
@@ -59,7 +59,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "/home/newgz/Insa/Projet_Java/ChatBotFX",
+    "last_opened_file_path": "/home/newgz/Insa/Projet_Java/ChatBotFX/ChatBotFX",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
diff --git a/../../ChatBot/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_10_26_[Default_Changelist]/shelved.patch b/../../ChatBot/.idea/shelf/Uncommitted_changes_before_Checkout_at_15_12_2022_10_26_[Default_Changelist]/shelved.patch
new file mode 100644
