Index: ChatBotFX/src/main/java/org/network/NetworkSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\n\nimport java.io.IOException;\nimport java.net.*;\n\npublic class NetworkSender{\n    private final DatagramSocket senderSock;\n    Gson gson= new Gson();\n    private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};\n\tprivate String broad = \"10.1.255.255\" ;\n\n    public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {\n            senderSock = new DatagramSocket();\n            senderSock.setBroadcast(true);\n            try{\n                switch (mode){\n                    case Nickname:\n                        Send_Nickname(infos);\n                        break;\n                    case UserInfos:\n                        Send_User_Infos(infos);\n                        break;\n                    case Disconnect:\n                        Disconnect(infos);\n                        break;\n                }\n            }catch (IOException e){\n                System.out.println(\"Message error\");\n            }\n    }\n\n\n    public void Send_User_Infos(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String user = gson.toJson(usr);\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.UserInfos, user));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Send_Nickname(User usr) throws IOException {\n\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Nickname, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n    public void Disconnect(User usr) throws IOException {\n        System.out.println(\"===== Phase d'envoi =====\");\n        String msg =gson.toJson( new NetworkMessage(Types.UDPMode.Disconnect, gson.toJson(usr)));\n        DatagramPacket outPacket = new DatagramPacket(msg.getBytes(),msg.length(),InetAddress.getByName(broad), 1234);\n        System.out.println(\"Envoi des infos\");\n        senderSock.send(outPacket);\n        System.out.println(\"Infos Envoyées\");\n        System.out.println(\"===== Fin d'envoi =====\");\n        senderSock.close();\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatBotFX/src/main/java/org/network/NetworkSender.java b/ChatBotFX/src/main/java/org/network/NetworkSender.java
--- a/ChatBotFX/src/main/java/org/network/NetworkSender.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
+++ b/ChatBotFX/src/main/java/org/network/NetworkSender.java	(date 1671094668783)
@@ -1,7 +1,7 @@
 package org.network;
 
 import com.google.gson.Gson;
-import org.database.User;
+import org.User;
 
 import java.io.IOException;
 import java.net.*;
@@ -10,7 +10,7 @@
     private final DatagramSocket senderSock;
     Gson gson= new Gson();
     private final byte[] broadcastAddr= {10,32,(byte)47, (byte) 255};
-	private String broad = "10.1.255.255" ;
+	private String broad = "localhost" ;
 
     public NetworkSender(User infos, Types.UDPMode mode) throws SocketException {
             senderSock = new DatagramSocket();
Index: ChatBotFX/src/main/java/org/MainSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\nimport org.network.NetworkReceiver;\nimport org.network.NetworkSender;\nimport org.network.Types;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\n\npublic class MainSender {\n\n    public static void main(String[] args) throws SocketException, UnknownHostException {\n        DatabaseManager db = new DatabaseManager();\n        User usr = new User(\"Cador\",1234, \"localhost\");\n        NetworkReceiver net = new NetworkReceiver(\"R1\");\n        NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);\n        usr= new User(\"Wesh\",1234,\"localhost\");\n        NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);\n        //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatBotFX/src/main/java/org/MainSender.java b/ChatBotFX/src/main/java/org/MainSender.java
--- a/ChatBotFX/src/main/java/org/MainSender.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
+++ b/ChatBotFX/src/main/java/org/MainSender.java	(date 1671094668819)
@@ -1,7 +1,6 @@
 package org;
 
 import org.database.DatabaseManager;
-import org.database.User;
 import org.network.NetworkReceiver;
 import org.network.NetworkSender;
 import org.network.Types;
@@ -11,14 +10,14 @@
 
 public class MainSender {
 
-    public static void main(String[] args) throws SocketException, UnknownHostException {
+    public static void main(String[] args) throws SocketException{
         DatabaseManager db = new DatabaseManager();
         User usr = new User("Cador",1234, "localhost");
+        //System.out.println(new Gson().toJson(usr));
         NetworkReceiver net = new NetworkReceiver("R1");
         NetworkSender S1 = new NetworkSender(usr, Types.UDPMode.UserInfos);
         usr= new User("Wesh",1234,"localhost");
         NetworkSender S2 = new NetworkSender(usr, Types.UDPMode.Nickname);
         //NetworkSender S3 = new NetworkSender(usr, Types.UDPMode.Disconnect);
-
     }
 }
Index: ChatBotFX/src/main/java/org/database/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatBotFX/src/main/java/org/database/User.java b/ChatBotFX/src/main/java/org/User.java
rename from ChatBotFX/src/main/java/org/database/User.java
rename to ChatBotFX/src/main/java/org/User.java
--- a/ChatBotFX/src/main/java/org/database/User.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
+++ b/ChatBotFX/src/main/java/org/User.java	(date 1671094668795)
@@ -1,4 +1,4 @@
-package org.database;
+package org;
 
 import java.util.Arrays;
 
Index: ChatBotFX/src/main/java/org/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org;\n\nimport org.database.DatabaseManager;\nimport org.database.User;\n\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\nimport java.sql.SQLException;\n\npublic class Main {\n\n    public static void main(String[] args) throws UnknownHostException, SocketException, SQLException {\n        DatabaseManager db = new DatabaseManager();\n        db.Update(new User(\"pls\", 1234,\"193.465\"));\n        db.Disconnect();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatBotFX/src/main/java/org/Main.java b/ChatBotFX/src/main/java/org/Main.java
--- a/ChatBotFX/src/main/java/org/Main.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
+++ b/ChatBotFX/src/main/java/org/Main.java	(date 1671094668827)
@@ -1,7 +1,6 @@
 package org;
 
 import org.database.DatabaseManager;
-import org.database.User;
 
 import java.net.SocketException;
 import java.net.UnknownHostException;
Index: ChatBotFX/src/main/java/org/network/NetworkReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.network;\n\nimport com.google.gson.Gson;\nimport org.database.User;\nimport org.database.DatabaseManager;\n\nimport java.io.IOException;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.SocketException;\nimport java.sql.SQLException;\n\npublic class NetworkReceiver extends Thread {\n    Gson gson = new Gson();\n    private DatagramSocket recvSock;\n\n    public NetworkReceiver(String id){\n        super(id);\n        System.out.println(\"====== RECEIVING THREAD INITIATED ======\");\n        start();\n    }\n\n    @Override\n    public void run() {\n        Receive();\n\n    }\n    private void Receive(){\n        try {\n            recvSock = new DatagramSocket(1234);\n        } catch (SocketException e) {\n            throw new RuntimeException(e);\n        }\n        byte[] buffer = new byte[256];\n        DatagramPacket inPacket = new DatagramPacket(buffer, buffer.length);\n        while(true){\n            try {\n                System.out.println(\"Attente de réception\");\n                recvSock.receive(inPacket);\n                String var = new String(inPacket.getData(), 0, inPacket.getLength());\n                NetworkMessage msg = gson.fromJson(var, NetworkMessage.class);\n                switch (msg.getMode()){\n                    case UserInfos:\n                        Receive_Infos(msg.getObject());\n                        break;\n                    case Nickname:\n                        Receive_Nickname(msg.getObject());\n                        break;\n                    case Disconnect:\n                        Receive_Disconnect(msg.getObject());\n                        break;\n                }\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n\n    public void Receive_Infos(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Nouvel Utilisateur \"+usr);\n        try{\n            DatabaseManager.Insert(usr);\n        } catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Nickname(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Changement de pseudo entrant \" + usr.getPseudo() );\n        try {\n            DatabaseManager.Update(usr);\n        } catch ( SQLException s){\n            System.out.println(s);\n        }\n    }\n    public void Receive_Disconnect(String obj){\n        User usr = gson.fromJson(obj, User.class);\n        System.out.println(\"Déconnexion de \" + obj);\n\n        try{\n            DatabaseManager.Remove(usr);\n        }catch (SQLException s){\n            System.out.println(s);\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatBotFX/src/main/java/org/network/NetworkReceiver.java b/ChatBotFX/src/main/java/org/network/NetworkReceiver.java
--- a/ChatBotFX/src/main/java/org/network/NetworkReceiver.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
+++ b/ChatBotFX/src/main/java/org/network/NetworkReceiver.java	(date 1671094668835)
@@ -1,7 +1,7 @@
 package org.network;
 
 import com.google.gson.Gson;
-import org.database.User;
+import org.User;
 import org.database.DatabaseManager;
 
 import java.io.IOException;
Index: ChatBotFX/src/main/java/org/database/DatabaseManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.database;\n\nimport java.sql.*;\nimport java.util.ArrayList;\n\n\npublic class DatabaseManager {\n    private static Connection con;\n    public DatabaseManager(){\n\n        try {\n            con = DriverManager.getConnection(\"jdbc:sqlite:ChaDBsqlite\");\n        }catch (SQLException s) {\n            System.out.println(s);\n        }\n       /* String query = \"SELECT * FROM main.History where ?\";\n        PreparedStatement pstmt = con.prepareStatement(query);\n        pstmt.setString(1,\"History\");\n        ResultSet rs = pstmt.executeQuery();\n\n        System.out.println(rs.getString(\"user\"));\n*/\n        System.out.println(\"Database Initialised\");\n\n\n    }\n\n    public static ArrayList<String> LoadUsers() throws SQLException {\n        ArrayList<String> l = new ArrayList<>();\n        String query = \"Select * from Users\";\n        PreparedStatement p = con.prepareStatement(query);\n        ResultSet rs = p.executeQuery();\n        while (rs.next()){\n            l.add(rs.getString(\"Nickname\"));\n        }\n        return l;\n    }\n\n\n    public static void Remove(User user) throws SQLException {\n        String query = \"DELETE FROM Users where Nickname = ?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.execute();\n    }\n    public static void Update(User user) throws SQLException {\n        String query = \"UPDATE Users SET Nickname = ? WHERE Ip = ?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.setString(2,user.getAddr());\n        p.execute();\n    }\n    public static void Insert(User user) throws SQLException {\n        String query = \"INSERT INTO Users(Nickname, Ip, Port) values (?,?,?)\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,user.getPseudo());\n        p.setString(2, user.getAddr());\n        p.setInt(3,user.getPort());\n        p.execute();\n    }\n    public static void Insert(Message msg) throws SQLException {\n        String query = \"INSERT INTO History(Sender, Receiver, Content,Date) values (?,?,?,?)\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1, msg.getSender());\n        p.setString(2, msg.getReceiver());\n        p.setString(3,msg.getMsg());\n        p.setDate(4, new Date(System.currentTimeMillis()));\n        p.execute();\n    }\n\n    public static ArrayList<Message> LoadHistory(User u) throws SQLException {\n        ArrayList<Message> l = new ArrayList<>();\n        String query = \"Select * from History where Sender = ? and Receiver = ? or Sender = ? or Receiver = ? \";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,u.getPseudo());\n        p.setString(2,\"Gwen\");\n        p.setString(3,\"Gwen\");\n        p.setString(4,u.getPseudo());\n        ResultSet rs = p.executeQuery();\n        while (rs.next()){\n            Message m = new Message(rs.getString(\"Sender\"),rs.getString(\"Receiver\"),rs.getString(\"Content\"),rs.getDate(\"Date\"));\n            l.add(m);\n\n            System.out.println(m);\n            System.out.println(\"--------------------\");\n        }\n        return l;\n    }\n    public static User LoadUser(String name) throws SQLException {\n        String query = \"Select * from Users where Nickname=?\";\n        PreparedStatement p = con.prepareStatement(query);\n        p.setString(1,name);\n        ResultSet rs = p.executeQuery();\n        //System.out.println(new User(rs.getString(\"Nickname\"), rs.getInt(\"Port\"), rs.getString(\"Ip\")));\n        return new User(rs.getString(\"Nickname\"), rs.getInt(\"Port\"), rs.getString(\"Ip\"));\n    }\n    public static void Disconnect(){\n        try {\n            con.close();\n        } catch (SQLException s ){\n            System.out.println(s);\n        }\n        System.out.println(\"Database Disconnected successfully\");\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatBotFX/src/main/java/org/database/DatabaseManager.java b/ChatBotFX/src/main/java/org/database/DatabaseManager.java
--- a/ChatBotFX/src/main/java/org/database/DatabaseManager.java	(revision 6a400dafb999540e5029cc6bb2d9c60265d5463f)
+++ b/ChatBotFX/src/main/java/org/database/DatabaseManager.java	(date 1671094668843)
@@ -1,5 +1,7 @@
 package org.database;
 
+import org.User;
+
 import java.sql.*;
 import java.util.ArrayList;
 
